services:
  postgres:
    image: postgres:17
    container_name: airbnb-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: airbnb
      TZ: Europe/Paris
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./seed/init-pg.sql:/docker-entrypoint-initdb.d/init-pg.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d airbnb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dbnet

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: airbnb-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpass
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "True"
      TZ: Europe/Paris
    ports:
      - "5050:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dbnet

  mongodb:
    image: mongo:7
    container_name: airbnb-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: airbnb
    volumes:
      - mongodb_data:/data/db
      - ./seed/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - dbnet

  api:
    build:
      context: ./api
      dockerfile: ../Dockerfile
    container_name: airbnb-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      HOST: 0.0.0.0
      PORT: 3000
      POSTGRES_URI: postgres://admin:password@airbnb-postgres:5432/airbnb
      MONGO_URI: mongodb://admin:password@airbnb-mongodb:27017/airbnb?authSource=admin
      TZ: Europe/Paris
    volumes:
      - ./api:/usr/src/app
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_started
    networks:
      - dbnet

networks:
  dbnet:

volumes:
  pgdata:
  pgadmin:
  mongodb_data: